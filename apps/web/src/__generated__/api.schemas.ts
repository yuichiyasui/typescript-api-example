/* eslint-disable */
/**
 * Generated by orval 🍺
 * Do not edit manually.
 * Task API
 * A simple task management API
 * OpenAPI spec version: 1.0.0
 */
export type GetTasks200ItemsItem = {
  /** タスクID */
  id: string;
  /** タスク名 */
  name: string;
};

export type GetTasks200 = {
  /** タスクのリスト */
  items: GetTasks200ItemsItem[];
};

export type PostUsersRegisterBody = {
  /**
   * ユーザー名
   * @minLength 1
   */
  name: string;
  /** メールアドレス */
  email: string;
  /**
   * パスワード（8文字以上128文字以下、大文字・小文字・数字・特殊文字を含む）
   * @minLength 8
   * @maxLength 128
   */
  password: string;
};

export type PostUsersRegister200 = {
  /** 作成されたユーザーID */
  userId: string;
};

export type PostUsersRegister400 = {
  /** エラーメッセージ */
  errors: string[];
};

export type PostUsersLoginBody = {
  /** メールアドレス */
  email: string;
  /**
   * パスワード
   * @minLength 1
   */
  password: string;
};

/**
 * ユーザーロール
 */
export type PostUsersLogin200UserRole =
  (typeof PostUsersLogin200UserRole)[keyof typeof PostUsersLogin200UserRole];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsersLogin200UserRole = {
  MEMBER: "MEMBER",
  ADMIN: "ADMIN",
} as const;

export type PostUsersLogin200User = {
  /** ユーザーID */
  id: string;
  /** ユーザー名 */
  name: string;
  /** メールアドレス */
  email: string;
  /** ユーザーロール */
  role: PostUsersLogin200UserRole;
};

export type PostUsersLogin200 = {
  user: PostUsersLogin200User;
};

export type PostUsersLogin400 = {
  /** エラーメッセージ */
  errors: string[];
};

export type PostUsersLogout200 = {
  /** ログアウト完了メッセージ */
  message: string;
};

/**
 * ユーザーロール
 */
export type GetUsersSelf200Role =
  (typeof GetUsersSelf200Role)[keyof typeof GetUsersSelf200Role];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetUsersSelf200Role = {
  MEMBER: "MEMBER",
  ADMIN: "ADMIN",
} as const;

export type GetUsersSelf200 = {
  /** ユーザーID */
  id: string;
  /** ユーザー名 */
  name: string;
  /** メールアドレス */
  email: string;
  /** ユーザーロール */
  role: GetUsersSelf200Role;
};

export type GetUsersSelf401 = {
  /** エラーメッセージ */
  errors: string[];
};

export type GetProjectsParams = {
  /**
   * ページ番号
   * @nullable
   */
  page?: number | null;
  /**
   * 1ページあたりの件数
   * @nullable
   */
  limit?: number | null;
};

export type GetProjects200ProjectsItem = {
  /** プロジェクトID */
  id: string;
  /** プロジェクト名 */
  name: string;
  /** 作成者ID */
  createdBy: string;
};

/**
 * ページネーション情報
 */
export type GetProjects200Pagination = {
  /**
   * ページ番号
   * @minimum 1
   */
  page: number;
  /**
   * 1ページあたりの件数
   * @minimum 1
   * @maximum 100
   */
  limit: number;
  /**
   * 総件数
   * @minimum 0
   */
  total: number;
  /**
   * 総ページ数
   * @minimum 0
   */
  totalPages: number;
};

export type GetProjects200 = {
  /** プロジェクト一覧 */
  projects: GetProjects200ProjectsItem[];
  /** ページネーション情報 */
  pagination: GetProjects200Pagination;
};

export type PostProjectsBody = {
  /**
   * プロジェクト名
   * @minLength 1
   * @maxLength 255
   */
  name: string;
};

export type PostProjects201 = {
  /** プロジェクトID */
  id: string;
  /** プロジェクト名 */
  name: string;
  /** 作成者ID */
  createdBy: string;
};
